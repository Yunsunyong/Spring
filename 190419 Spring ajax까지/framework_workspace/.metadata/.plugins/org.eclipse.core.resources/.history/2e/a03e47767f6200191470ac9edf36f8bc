package org.kh.first.test.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.kh.first.test.model.vo.Sample;
import org.kh.first.test.model.vo.User;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class TestController {
	//testAjaxPage.jsp 파일 내보내기용
	@RequestMapping("moveAjax.do")
	public String moveAjaxPage() {
		return "test/testAjaxPage";
	}
	
	//ajax test method ------------------------------------------
	@RequestMapping(value="test1.do", method=RequestMethod.POST)
	public void test1Method(Sample sample, HttpServletResponse response) throws IOException {
		System.out.println("sample : " + sample);
		response.setContentType("text/html; charset=utf-8");
		PrintWriter out = response.getWriter();
		if(sample.getName().equals("박혁거세")) {
			out.append("ok");
			out.flush();
		}else {
			out.append("fail");
			out.flush();
		}
		out.close();
		
	}
	
	@RequestMapping(value="test2.do", method=RequestMethod.POST)
	@ResponseBody  //리턴하는 json 문자열을 response 객체에 담아서 보내라는 의미의 어노테이션임
	public String test2Method(HttpServletResponse response) throws UnsupportedEncodingException {
		response.setContentType("application/json; charset=utf-8");
		
		JSONObject job = new JSONObject();
		job.put("no", 127);
		job.put("title", URLEncoder.encode("ajax로 json 리턴 테스트", "UTF-8"));
		job.put("writer", "GOD");
		job.put("content", URLEncoder.encode("컨트롤러에서 json객체를 ajax로 보냈습니다. ", "UTF-8"));
		
		return job.toJSONString();
	}
	
	@RequestMapping(value="test3.do", method=RequestMethod.POST)
	public void test3Method(HttpServletResponse response) {
		List<User> list = new ArrayList<>();
		
		list.add(new User("user01","pass01","김한일",30,"",""));
		list.add(new User("","","",""));
		list.add(new User("","","",""));
		list.add(new User("","","",""));
		list.add(new User("","","",""));
	}
}
