/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-04-18 08:41:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class enrollPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>enrollPage</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../../../resources/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t//암호와 암호확인의 기록값이 일치하는지 확인\r\n");
      out.write("\t\t$(\"input#userpwd2\").blur(function(){\r\n");
      out.write("\t\t\t//포커스가 없어졌을 때\r\n");
      out.write("\t\t\t//console.log(\"focus 없어짐....\");\r\n");
      out.write("\t\t\tvar pwd1 = $(\"#userpwd\").val();\r\n");
      out.write("\t\t\tvar pwd2 = $(\"#userpwd2\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(pwd1 != pwd2){\r\n");
      out.write("\t\t\t\talert(\"암호와 암호확인이 일치하지 않습니다.\\n\"\r\n");
      out.write("\t\t\t\t\t+ \"다시 입력하십시요.\");\r\n");
      out.write("\t\t\t\t$(\"#userpwd\").select();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tfunction checkValidate(){\r\n");
      out.write("\t\tvar userid = $(\"#userid\").val();\r\n");
      out.write("\t\tvar userpwd = $(\"#userpwd\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//아이디와 암호의 글자갯수 확인\r\n");
      out.write("\t\tif(!(userid.length >= 6 && userid.length <= 12)){\r\n");
      out.write("\t\t\talert(\"아이디의 글자갯수는 6글자이상 12글자이하여야 합니다.\");\r\n");
      out.write("\t\t\t$(\"#userid\").select();\r\n");
      out.write("\t\t\treturn false;  //submit 실행 안됨.\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!(userpwd.length >= 6 && userpwd.length <= 12)){\r\n");
      out.write("\t\t\talert(\"암호의 글자갯수는 6글자이상 12글자이하여야 합니다.\");\r\n");
      out.write("\t\t\t$(\"#userpwd\").select();\r\n");
      out.write("\t\t\treturn false;  //submit 실행 안됨.\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//아이디와 암호의 요구한 글자만 포함 확인\r\n");
      out.write("\t\t//영어소문자, 대문자, 숫자, 기호문자(#,_,!,*)만 허용\r\n");
      out.write("\t\t//정규표현식을 주로 사용함\r\n");
      out.write("\t\tfor(var i in userid){\r\n");
      out.write("\t\t\tvar ch = userid.charAt(i);\r\n");
      out.write("\t\t\tif(!((ch >= 'A' && ch <= 'Z') || \r\n");
      out.write("\t\t\t\t(ch >= 'a' && ch <= 'z') || \r\n");
      out.write("\t\t\t\t(ch >= '0' && ch <= '9') || \r\n");
      out.write("\t\t\t\t(ch == '#' || ch == '_' || ch == '!' || ch == '*'))){\r\n");
      out.write("\t\t\t\talert(\"아이디는 영어소문자와 영어대문자, \" + \r\n");
      out.write("\t\t\t\t\t\"숫자, 기호문자(#,_,!,*)만 사용할 수 있습니다.\");\r\n");
      out.write("\t\t\t\t$(\"#userid\").select();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var i in userpwd){\r\n");
      out.write("\t\t\tvar ch = userpwd.charAt(i);\r\n");
      out.write("\t\t\tif(!((ch >= 'A' && ch <= 'Z') || \r\n");
      out.write("\t\t\t\t(ch >= 'a' && ch <= 'z') || \r\n");
      out.write("\t\t\t\t(ch >= '0' && ch <= '9') || \r\n");
      out.write("\t\t\t\t(ch == '#' || ch == '_' || ch == '!' || ch == '*'))){\r\n");
      out.write("\t\t\t\talert(\"암호는 영어소문자와 영어대문자, \" + \r\n");
      out.write("\t\t\t\t\t\"숫자, 기호문자(#,_,!,*)만 사용할 수 있습니다.\");\r\n");
      out.write("\t\t\t\t$(\"#userpwd\").select();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn true;  //submit 실행함.\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//정규표현식 사용한 값 검사와 유효성 체크 처리\r\n");
      out.write("\tfunction checkValidate2(){\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t\t정규표현식 작성, 사용방법\r\n");
      out.write("\t\t\t1. var 변수명 = /정규표현식/플래그;\r\n");
      out.write("\t\t\t2. var 변수명 = new RegExp(\"정규표현식\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(변수명.test(검사할값)){ \r\n");
      out.write("\t\t\t\t정규식을 만족했을 때 처리내용\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t예 : 입력값이 숫자로만 구성 확인\r\n");
      out.write("\t\t\tvar re = /^[0-9]+$/;\r\n");
      out.write("\t\t\t예 : 입력값이 영어소문자와 숫자로만 구성 확인\r\n");
      out.write("\t\t\t    첫글자는 반드시 영어소문자로 시작\r\n");
      out.write("\t\t\t    글자갯수가 4글자이상 12글자이하로 작성\r\n");
      out.write("\t\t\t    \\d == [0-9]\r\n");
      out.write("\t\t\t\t{4, 12} : 4글자이상 12글자이하\r\n");
      out.write("\t\t\tvar re = /^[a-z][a-z\\d]{4,12}$/;\r\n");
      out.write("\t\t\t예 : 한글로만 2글자 이상\r\n");
      out.write("\t\t\tvar re = /^[ㄱ-ㅎ|ㅏ-ㅣ|가-힝]{2,}$/;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\\w == [a-zA-Z0-9]\r\n");
      out.write("\t\t\t\\w-\\.\r\n");
      out.write("\t\t\t\\.[\\w-]{1,3} : .뒤에 영어,숫자가 조합된 글자가 \r\n");
      out.write("\t\t\t\t\t1번에서 3번까지 사용 가능함\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar userid = $(\"#userid\").val();\r\n");
      out.write("\t\tvar userpwd = $(\"#userpwd\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar re = /^[a-zA-Z][\\w\\_#\\!\\*]{6,12}$/;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!re.test(userid)){\r\n");
      out.write("\t\t\talert(\"아이디는 영어소문자와 영어대문자, \" + \r\n");
      out.write("\t\t\t\"숫자, 기호문자(#,_,!,*)만 사용할 수 있습니다.\");\r\n");
      out.write("\t\t\t$(\"#userid\").select();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!re.test(userpwd)){\r\n");
      out.write("\t\t\talert(\"암호는 영어소문자와 영어대문자, \" + \r\n");
      out.write("\t\t\t\"숫자, 기호문자(#,_,!,*)만 사용할 수 있습니다.\");\r\n");
      out.write("\t\t\t$(\"#userpwd\").select();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction checkId(){\r\n");
      out.write("\t\t//자바스크립트에서 서블릿으로 서비스요청은 할 수 있음\r\n");
      out.write("\t\t//서블릿이 전송하는 결과값을 받을 수 없음\r\n");
      out.write("\t\t//서블릿은 처리하고 나서 성공/실패에 대한 뷰를 \r\n");
      out.write("\t\t//선택해서 내보내는 방법만 사용 가능함\r\n");
      out.write("\t\t/* location.href = \"/first/idchk?userid=\" + \r\n");
      out.write("\t\t\t\tdocument.getElementById(\"userid\").value; */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//서비스를 요청한 페이지가 바뀌지 않게 하면서\r\n");
      out.write("\t\t//네트워크 입출력 방식으로 서블릿이 처리한 결과를\r\n");
      out.write("\t\t//자바스크립트가 받아서 사용하려면, ajax 를 사용해야 함\r\n");
      out.write("\t\t//ajax 는 자바스크립트를 사용해도 되고(코드가 복잡함), \r\n");
      out.write("\t\t//jQuery 를 사용해도 됨(코드가 간단함).\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//jQuery.ajax() 사용\r\n");
      out.write("\t\t//웹서버 컨트롤러와 아이디 중복 체크 확인용 통신 처리\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"idchk.do\",\r\n");
      out.write("\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\tdata: {userid: $(\"#userid\").val()},\r\n");
      out.write("\t\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t\tconsole.log(\"success : \" + data);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data == \"ok\"){\r\n");
      out.write("\t\t\t\t\talert(\"사용 가능한 아이디입니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#username\").focus();\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"이미 존재하는 아이디입니다.\\n\"\r\n");
      out.write("\t\t\t\t\t\t+ \"다시 입력하십시요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#userid\").select();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textstatus, errorthrown){\r\n");
      out.write("\t\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus\r\n");
      out.write("\t\t\t\t\t\t+ \", \" + errorthrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\treturn false;  //submit 못하게 함\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("<h1 align=\"center\">회원 가입 페이지</h1>\r\n");
      out.write("<form action=\"minsert.do\" method=\"post\" \r\n");
      out.write("enctype=\"multipart/form-data\" \r\n");
      out.write("onsubmit=\"return checkValidate1();\">\r\n");
      out.write("<table align=\"center\" width=\"600\" border=\"1\">\r\n");
      out.write("<tr height=\"20\"><th width=\"150\" bgcolor=\"orange\">*아이디</th>\r\n");
      out.write("<td><input type=\"text\" name=\"userid\" id=\"userid\"\r\n");
      out.write("placeholder=\"6글자이상 12글자이하로 작성\" required>\r\n");
      out.write(" &nbsp; &nbsp; \r\n");
      out.write("<button onclick=\"return checkId();\">아이디 중복확인</button></td></tr>\r\n");
      out.write("<tr height=\"20\"><th width=\"150\" bgcolor=\"orange\">*이 름</th>\r\n");
      out.write("<td><input type=\"text\" name=\"username\" id=\"username\" required></td></tr>\r\n");
      out.write("<tr height=\"20\"><th width=\"150\" bgcolor=\"orange\">*암 호</th>\r\n");
      out.write("<td><input type=\"password\" name=\"userpwd\" id=\"userpwd\" required></td></tr>\r\n");
      out.write("<tr height=\"20\"><th width=\"150\" bgcolor=\"orange\">암호확인</th>\r\n");
      out.write("<td><input type=\"password\" id=\"userpwd2\" required></td></tr>\r\n");
      out.write("<tr height=\"20\"><th bgcolor=\"orange\">*성 별</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<input type=\"radio\" name=\"gender\" value=\"M\" required> 남\r\n");
      out.write("\t&nbsp; &nbsp;\r\n");
      out.write("\t<input type=\"radio\" name=\"gender\" value=\"F\" required> 여\r\n");
      out.write("\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr height=\"20\"><th bgcolor=\"orange\">*나 이</th>\r\n");
      out.write("<td><input type=\"number\" name=\"age\" min=\"19\" max=\"150\" \r\n");
      out.write("required></td></tr>\r\n");
      out.write("<tr height=\"20\"><th bgcolor=\"orange\">전화번호</th>\r\n");
      out.write("<td><input type=\"tel\" name=\"phone\" ></td></tr>\r\n");
      out.write("<tr height=\"20\"><th bgcolor=\"orange\">이메일</th>\r\n");
      out.write("<td><input type=\"email\" name=\"email\" \"></td></tr>\r\n");
      out.write("<tr height=\"20\"><th bgcolor=\"orange\">취 미</th>\r\n");
      out.write("<td>\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"game\" > 게임\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"reading\" > 책읽기\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"music\" > 음악듣기\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"climb\" > 등산\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"sport\" > 운동\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"movie\" > 영화감상\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"travel\" > 여행하기\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"cook\" > 요리하기\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"150\">\r\n");
      out.write("\t<input type=\"checkbox\" name=\"hobby\" value=\"etc\" > 기타\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr height=\"20\"><th bgcolor=\"orange\">기 타</th>\r\n");
      out.write("<td><textarea name=\"etc\" rows=\"5\" cols=\"50\">\r\n");
      out.write("</textarea></td></tr>\r\n");
      out.write("<tr><th>프로필사진</th>\r\n");
      out.write("<td><input type=\"file\" name=\"photo\"></td></tr>\r\n");
      out.write("<tr height=\"20\"><th colspan=\"2\">\r\n");
      out.write("<input type=\"submit\" value=\"가입하기\">\r\n");
      out.write("&nbsp; &nbsp;\r\n");
      out.write("<input type=\"reset\" value=\"입력취소\">\r\n");
      out.write("&nbsp; &nbsp;\r\n");
      out.write("<a href=\"main.do\">시작페이지로 이동</a>\r\n");
      out.write("</th></tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
